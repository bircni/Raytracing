searchState.loadedDescShard("trayracer", 0, "I18n backend instance\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmax number of nested shade calls\nRaycast and continue on hits if the material is transparent\nRender a pixel at the given coordinates. x and y are in …\nScene is cloned into here for rendering\nCancel the rendering if true\nCancel the rendering if true\nReturns the argument unchanged.\nReturns the argument unchanged.\nimage data (CPU exclusive)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProgress of the rendering in the range [0, <code>u16::MAX</code>]\nProgress of the rendering in the range [0, <code>u16::MAX</code>]\nmain rendering thread\negui Texture (GPU exclusive)\nWrite the rendering time in milliseconds\nWrite the rendering time in milliseconds\nThe data storage that contains all the matrix components. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns a ray from the given pixel coordinates. x and y …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nColor on and Ambient offColor on and Ambient onHighlight on…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTriangulate a polygon and compute normals and uv …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nreturn barycentric coordinates if ray intersects triangle\nCalls <code>U::from(self)</code>.\nprovide (de)serialization for Color (aka. Vector3) from …\nprovide (de)serialization for Point3 from x,y,z fields\nprovide (de)serialization for Vector3 from x,y,z fields\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMain application This holds all the UI elements and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDialog to add a new object\nDialog to select a skybox image\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWhether the about window should be shown\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")